#!/usr/bin/env php
<?php

if (isset($_SERVER) && key_exists('PWD', $_SERVER)) {
    // полагаемся, что был вызван composer tool из корня проекта
    $appPath = $_SERVER['PWD'] . '/';
} else {
    // считаем, что этот файл лежит в vendor/zfbase/zfe/bin не по симлинку
    $appPath = __DIR__ . '/../../../../';
}

require_once $appPath . '/vendor/autoload.php';
require_once $appPath . '/constants.php';

$app = new Zend_Application(APPLICATION_ENV, GENERAL_CONFIG);
$app->getBootstrap()
    ->bootstrap('config')
    ->bootstrap('loader')
    ->bootstrap('doctrine')
;

Doctrine_Manager::connection()->unsetAttribute(Doctrine_Core::ATTR_LISTENER);
Doctrine_Core::debug(false);
History::$globalRealtimeWhiteHistory = false;

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

$writer = new Zend_Log_Writer_Stream('php://stdout');
$logger = new Zend_Log($writer);

$manager = ZFE_Tasks_Manager::getInstance();

try {
    $opts = new Zend_Console_Getopt([
        'part-size|s-i' => 'Размер партии для обработки',
        'trait|t-s' => 'Номер и общее число трейтов для обработки в несколько потоков через слеш (пример: 1/10)',
        /** @todo Добавить возможность указать конкретный приоритет или диапазон */
    ]);
    $opts->parse();
} catch (Zend_Console_Getopt_Exception $e) {
    echo $e->getUsageMessage();
    exit;
}

$partSize = $opts->getOption('part-size') ?: config('tasks.partSize', 50);
$performersCode = $opts->getRemainingArgs();

$traitNo = $traitTotal = null;
$traitData = [];
$traitString = $opts->getOption('trait');
if ($traitString) {
    if (preg_match('/^([0-9]+)\/([1-9][0-9]*)$/', $traitString, $traitData)) {
        list(, $traitNo, $traitTotal) = $traitData;
    } else {
        die("Некорректный параметр trait\n");
    }
}

while (true) {
    $tasks = $manager->findAllToDo($partSize, $performersCode, $traitNo, $traitTotal);
    $managed = $manager->manage($tasks, $logger);

    if ($tasks->count() < $partSize) {
        sleep(1);
    }
}
